#!/usr/bin/env python

import click
from tdqd_tools.spectral_lines import get_spectral_lines, plot_spectral_lines
from tdqd_tools.io_data import return_time_data, write_data


@click.command()
@click.argument("filename")
@click.option(
    "--timestep-stop-laser",
    default=None,
    help="Timestep where laser is turned off",
)
@click.option("--out", default="", help="Filename of spectral data to be saved")
@click.option(
    "--plot/--no-plot", default=True, help="Whether to plot the data or not"
)
@click.option(
    "--xlim",
    type=(float, float),
    default=(None, None),
    help="Limits on x-axis in plot",
)
def main(filename, timestep_stop_laser, out, plot, xlim):
    data = return_time_data(filename)

    stop_laser = slice(None, None)

    if timestep_stop_laser is not None:
        stop_laser = slice(timestep_stop_laser, None)

    freq, a = get_spectral_lines(data[:, 0], data[:, 1], slice_=stop_laser)

    if plot:
        plot_spectral_lines(freq, a, xlim)

    if out:
        write_data(out, freq, a)


if __name__ == "__main__":
    main()
